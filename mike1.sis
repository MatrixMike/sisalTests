
define main
type string = array[character];
type OneDim = array [ real ];
type TwoDim = array [ OneDim ];
global sqrt( x: real returns real );
global atan( x: real returns real );

function polar (x,y: real; returns real)
%mike1.sis:11: ERROR - Function 'sqrt' is undefined.
    let 
      r := sqrt (x*x + y*y);
      theta := atan(y/x);
    in
      r 
    end let
end function

function testMJH (i,j : integer ; returns integer)
%type ans = integer
% function body as a let 
  let k := i + j * 5;
  in k
  end let
% no need to express return 
%  returns  (i * j )
end function

function generate( n : integer
                   returns TwoDim, TwoDim )

   for i in 1, n cross j in 1, n
   returns array of real(i)/real(j)
           array of real(i)*real(j)
   end for
end function % generate

function doit( n : integer; A, B : TwoDim
               returns TwoDim )

   for i in 1, n cross
       j in 1, n
      c := for k in 1, n
              t := A[i,k] * B[k,j]
            returns value of sum t
            end for
   returns array of c
   end for
end function % doit



function test2(returns string)
"some text"
end function

function main(  n : integer returns TwoDim )

let A, B := generate( n )
in  doit( n, A, B )
%testMJH ( 2,1)
%  test2()
end let

end function % main
